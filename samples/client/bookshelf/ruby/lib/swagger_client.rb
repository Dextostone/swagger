=begin
Book Sharing API

This is a backend for distributed library application

OpenAPI spec version: 1.0.0

Generated by: https://github.com/swagger-api/swagger-codegen.git


=end

# Common files
require 'swagger_client/api_client'
require 'swagger_client/api_error'
require 'swagger_client/version'
require 'swagger_client/configuration'

# Models
require 'swagger_client/models/author'
require 'swagger_client/models/body'
require 'swagger_client/models/body_1'
require 'swagger_client/models/book'
require 'swagger_client/models/book_state'
require 'swagger_client/models/comment'
require 'swagger_client/models/deleted_book'
require 'swagger_client/models/new_author'
require 'swagger_client/models/new_book'
require 'swagger_client/models/new_book_state'
require 'swagger_client/models/new_comment'
require 'swagger_client/models/new_publisher'
require 'swagger_client/models/new_publisher_address'
require 'swagger_client/models/new_user'
require 'swagger_client/models/publisher'
require 'swagger_client/models/request_user'
require 'swagger_client/models/response'
require 'swagger_client/models/response_user'
require 'swagger_client/models/role'
require 'swagger_client/models/user'

# APIs
require 'swagger_client/api/authenticate_api'
require 'swagger_client/api/book_api'
require 'swagger_client/api/book_reports_api'
require 'swagger_client/api/book_request_api'
require 'swagger_client/api/book_return_and_lost_operations_api'
require 'swagger_client/api/book_search_api'
require 'swagger_client/api/book_status_api'
require 'swagger_client/api/search_api'
require 'swagger_client/api/user_api'
require 'swagger_client/api/user_reports_api'

module SwaggerClient
  class << self
    # Customize default settings for the SDK using block.
    #   SwaggerClient.configure do |config|
    #     config.username = "xxx"
    #     config.password = "xxx"
    #   end
    # If no block given, return the default Configuration object.
    def configure
      if block_given?
        yield(Configuration.default)
      else
        Configuration.default
      end
    end
  end
end
