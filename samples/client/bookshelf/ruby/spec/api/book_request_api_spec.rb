=begin
Book Sharing API

This is a backend for distributed library application

OpenAPI spec version: 1.0.0

Generated by: https://github.com/swagger-api/swagger-codegen.git


=end

require 'spec_helper'
require 'json'

# Unit tests for SwaggerClient::BookRequestApi
# Automatically generated by swagger-codegen (github.com/swagger-api/swagger-codegen)
# Please update as you see appropriate
describe 'BookRequestApi' do
  before do
    # run before each test
    @instance = SwaggerClient::BookRequestApi.new
  end

  after do
    # run after each test
  end

  describe 'test an instance of BookRequestApi' do
    it 'should create an instact of BookRequestApi' do
      @instance.should be_a(SwaggerClient::BookRequestApi)
    end
  end

  # unit tests for approve_book_request
  # Lend a book
  # Approve the request for borrowing book
  # @param book_id The id of book which is requested.
  # @param user_id The id of user whose request needs to be approved.
  # @param authorization Token which needs to be sent as \&quot;Authorization: Bearer XXXXXX\&quot; 
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'approve_book_request test' do
    it "should work" do
      # assertion here
      # should be_a()
      # should be_nil
      # should ==
      # should_not ==
    end
  end

  # unit tests for reject_book_request
  # Reject the request for borrowing a book
  # Reject the request for borrowing book
  # @param book_id The id of book whose request needs to be rejected.
  # @param user_id The id of user whose request needs to be rejected.
  # @param authorization Token which needs to be sent as \&quot;Authorization: Bearer XXXXXX\&quot; 
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'reject_book_request test' do
    it "should work" do
      # assertion here
      # should be_a()
      # should be_nil
      # should ==
      # should_not ==
    end
  end

  # unit tests for request_book
  # Borrow a book
  # Send a request to borrow a book
  # @param book_id The id of book which is requested.
  # @param authorization Token which needs to be sent as \&quot;Authorization: Bearer XXXXXX\&quot; 
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'request_book test' do
    it "should work" do
      # assertion here
      # should be_a()
      # should be_nil
      # should ==
      # should_not ==
    end
  end

end
